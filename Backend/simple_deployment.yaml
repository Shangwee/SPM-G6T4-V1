apiVersion: v1
kind: Namespace
metadata:
  name: spmproject
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: account-db-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/data/account-db
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: account-db-pvc
  namespace: spmproject
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: account-db
  namespace: spmproject
spec:
  replicas: 1
  selector:
    matchLabels:
      app: account-db
  template:
    metadata:
      labels:
        app: account-db
    spec:
      containers:
        - name: mysql
          image: mysql:latest
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "root"
            - name: MYSQL_DATABASE
              value: "account"
          volumeMounts:
            - name: account-db-storage
              mountPath: /var/lib/mysql
            - name: account-sql-volume
              mountPath: /docker-entrypoint-initdb.d
            - name: account-csv-volume
              mountPath: /var/lib/mysql-files
      volumes:
        - name: account-db-storage
          persistentVolumeClaim:
            claimName: account-db-pvc
        - name: account-sql-volume
          hostPath:
            path: ./SimpleService/Account/db/account.sql
        - name: account-csv-volume
          hostPath:
            path: ./SimpleService/Account/employee.csv
---
apiVersion: v1
kind: Service
metadata:
  name: account-db-service
  namespace: spmproject
spec:
  selector:
    app: account-db
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: account
  namespace: spmproject
spec:
  replicas: 1
  selector:
    matchLabels:
      app: account
  template:
    metadata:
      labels:
        app: account
    spec:
      containers:
        - name: account
          image: gcr.io/spmprojecttest/account:1.0
          resources:
            requests:
              memory: "128Mi"
              cpu: "50m"
            limits:
              memory: "256Mi"
              cpu: "250m"
          ports:
            - containerPort: 5001
          env:
            - name: DB_HOST
              value: account-db
            - name: DB_USER
              value: root
            - name: DB_PASSWORD
              value: root
            - name: DB_NAME
              value: account
            - name: DB_PORT
              value: "3306"
---
apiVersion: v1
kind: Service
metadata:
  name: account-service
  namespace: spmproject
spec:
  selector:
    app: account
  ports:
    - protocol: TCP
      port: 5001
      targetPort: 5001
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: schedule-db-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/data/schedule-db
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: schedule-db-pvc
  namespace: spmproject
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: schedule-db
  namespace: spmproject
spec:
  replicas: 1
  selector:
    matchLabels:
      app: schedule-db
  template:
    metadata:
      labels:
        app: schedule-db
    spec:
      containers:
        - name: mysql
          image: mysql:latest
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "root"
            - name: MYSQL_DATABASE
              value: "schedule"
          volumeMounts:
            - name: schedule-db-storage
              mountPath: /var/lib/mysql
            - name: schedule-sql-volume
              mountPath: /docker-entrypoint-initdb.d
            - name: schedule-csv-volume
              mountPath: /var/lib/mysql-files
      volumes:
        - name: schedule-db-storage
          persistentVolumeClaim:
            claimName: schedule-db-pvc
        - name: schedule-sql-volume
          hostPath:
            path: ./SimpleService/Schedule/db/schedule.sql
        - name: schedule-csv-volume
          hostPath:
            path: ./SimpleService/Schedule/db/schedule.sql
---
apiVersion: v1
kind: Service
metadata:
  name: schedule-db-service
  namespace: spmproject
spec:
  selector:
    app: schedule-db
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: schedule
  namespace: spmproject
spec:
  replicas: 1
  selector:
    matchLabels:
      app: schedule
  template:
    metadata:
      labels:
        app: schedule
    spec:
      containers:
        - name: schedule
          image: gcr.io/spmprojecttest/schedule:1.0
          resources:
            requests:
              memory: "128Mi"
              cpu: "50m"
            limits:
              memory: "256Mi"
              cpu: "250m"
          ports:
            - containerPort: 5002
          env:
            - name: DB_HOST
              value: schedule-db
            - name: DB_USER
              value: root
            - name: DB_PASSWORD
              value: root
            - name: DB_NAME
              value: schedule
            - name: DB_PORT
              value: "3306"
---
apiVersion: v1
kind: Service
metadata:
  name: schedule-service
  namespace: spmproject
spec:
  selector:
    app: schedule
  ports:
    - protocol: TCP
      port: 5002
      targetPort: 5002

---
# Request DB Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: request-db
  namespace: spmproject
spec:
  replicas: 1
  selector:
    matchLabels:
      app: request-db
  template:
    metadata:
      labels:
        app: request-db
    spec:
      containers:
        - name: mysql
          image: mysql:latest
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "root"
            - name: MYSQL_DATABASE
              value: "request"
          volumeMounts:
            - name: request-db-storage
              mountPath: /var/lib/mysql
            - name: request-sql-volume
              mountPath: /docker-entrypoint-initdb.d
            - name: request-csv-volume
              mountPath: /var/lib/mysql-files
      volumes:
        - name: request-db-storage
          persistentVolumeClaim:
            claimName: request-db-pvc
        - name: request-sql-volume
          hostPath:
            path: ./Request/db/request.sql
        - name: request-csv-volume
          hostPath:
            path: ./Request/request.csv
---
# Request DB Service
apiVersion: v1
kind: Service
metadata:
  name: request-db-service
  namespace: spmproject
spec:
  selector:
    app: request-db
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
---
# Request Microservice Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: request
  namespace: spmproject
spec:
  replicas: 1
  selector:
    matchLabels:
      app: request
  template:
    metadata:
      labels:
        app: request
    spec:
      containers:
        - name: request
          image: gcr.io/spmprojecttest/request:1.0
          resources:
            requests:
              memory: "128Mi"
              cpu: "50m"
            limits:
              memory: "256Mi"
              cpu: "250m"
          ports:
            - containerPort: 5000
          env:
            - name: DB_HOST
              value: request-db
            - name: DB_USER
              value: root
            - name: DB_PASSWORD
              value: root
            - name: DB_NAME
              value: request
            - name: DB_PORT
              value: "3306"
---
# Request Service
apiVersion: v1
kind: Service
metadata:
  name: request-service
  namespace: spmproject
spec:
  selector:
    app: request
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000

#Notification Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification-db
  namespace: spmproject
spec:
  replicas: 1
  selector:
    matchLabels:
      app: notification-db
  template:
    metadata:
      labels:
        app: notification-db
    spec:
      containers:
        - name: mysql
          image: mysql:latest
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "root"
            - name: MYSQL_DATABASE
              value: "notifications"
          volumeMounts:
            - name: notification-sql-volume
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: notification-sql-volume
          persistentVolumeClaim:
            claimName: notifications-db-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: notification-db-service
  namespace: spmproject
spec:
  selector:
    app: notification-db
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification
  namespace: spmproject
spec:
  replicas: 1
  selector:
    matchLabels:
      app: notification
  template:
    metadata:
      labels:
        app: notification
    spec:
      containers:
        - name: notification
          image: gcr.io/spmprojecttest/notification:1.0
          ports:
            - containerPort: 5005
          env:
            - name: DB_HOST
              value: notification-db-service
            - name: DB_USER
              value: root
            - name: DB_PASSWORD
              value: root
            - name: DB_NAME
              value: notifications
            - name: DB_PORT
              value: "3306"
---
apiVersion: v1
kind: Service
metadata:
  name: notification-service
  namespace: spmproject
spec:
  selector:
    app: notification
  ports:
    - protocol: TCP
      port: 5005
      targetPort: 5005
