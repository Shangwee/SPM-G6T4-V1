version: "3.8"

services:
  # Simple microservice

  #################################
  # Account: The Account microservice
  #################################
  account:
    build: ./SimpleService/Account
    image: gcr.io/spm2024/account:1.0 # Updated for GCR
    restart: always
    ports: [5001:5001]
    environment:
      DB_HOST: spmg6t4.duckdns.org
      DB_USER: remote
      DB_PASSWORD: P@ssw0rd
      DB_NAME: account
      DB_PORT: 3306

  #################################
  # Account test: testing the Account microservice
  #################################
  # account_test:
  #   build: ./SimpleService/Account
  #   image: gcr.io/spm2024/account_test:1.0 # Updated for GCR
  #   environment:
  #     DB_HOST: account_db
  #     DB_USER: root
  #     DB_PASSWORD: root
  #     DB_NAME: account
  #     DB_PORT: 3306
  #   command: /bin/sh -c "sleep 20 && python -m unittest account_test.py"

  #################################
  # Schedule: The Schedule microservice
  #################################
  schedule:
    build: ./SimpleService/Schedule
    image: gcr.io/spm2024/schedule:1.0 # Updated for GCR
    restart: always
    ports: [5002:5000]
    environment:
      DB_HOST: spmg6t4.duckdns.org
      DB_USER: remote
      DB_PASSWORD: P@ssw0rd
      DB_NAME: schedule
      DB_PORT: 3306

  #################################
  # Service_Test: Testing for scheduke microservice
  #################################
  # schedule_test:
  #   build: ./SimpleService/Schedule
  #   image: gcr.io/spm2024/schedule_test:1.0
  #   environment:
  #     DB_HOST: schedule_db
  #     DB_USER: root
  #     DB_PASSWORD: root
  #     DB_NAME: schedule
  #     DB_PORT: 3306
  #   command: /bin/sh -c "sleep 20 && python -m unittest schedule_test.py"

  #################################
  # Request: The Request microservice
  #################################
  request:
    build: ./SimpleService/Request
    image: gcr.io/spm2024/request:1.0 # Updated for GCR
    restart: always
    ports: [5003:5000]
    environment:
      DB_HOST: spmg6t4.duckdns.org
      DB_USER: remote
      DB_PASSWORD: P@ssw0rd
      DB_NAME: request
      DB_PORT: 3306

  #################################
  # Request test: testing the Request microservice
  #################################
  # request_test:
  #   build: ./SimpleService/Request
  #   image: gcr.io/spm2024/request_test:1.0 # Updated for GCR
  #   environment:
  #     DB_HOST: request_db
  #     DB_USER: root
  #     DB_PASSWORD: root
  #     DB_NAME: request
  #     DB_PORT: 3306
  #   command: /bin/sh -c "sleep 20 && python -m unittest request_test.py"

  #################################
  # Meeting: The Meeting microservice
  #################################
  meeting:
    build: ./SimpleService/Meeting
    image: gcr.io/spm2024/meeting:1.0 # Updated for GCR
    restart: always
    ports: [5004:5000]
    environment:
      DB_HOST: spmg6t4.duckdns.org
      DB_USER: remote
      DB_PASSWORD: P@ssw0rd
      DB_NAME: meeting
      DB_PORT: 3306

  #################################
  # notification: The Notification microservice
  #################################
  notification:
    build: ./SimpleService/Notification
    image: gcr.io/spm2024/notification:1.0
    restart: always
    ports : [5005:5005]
    environment:
      DB_HOST: notification_db
      DB_USER: root
      DB_PASSWORD: root
      DB_NAME: notifications
      DB_PORT: 3306

  #################################
  # notification_db: The Notification SQL Database
  #################################
  notification_db:
    image: mysql:latest
    restart: always
    ports: [3305:3306]
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: notifications
    volumes:
      - ./SimpleService/Notification/src/config/notification.sql:/docker-entrypoint-initdb.d/init.sql

  # complex microservice

  #################################
  # FlexibleArrangement: The FlexibleArrangement microservice
  #################################
  FlexibleArrangement:
    build:
      context: ./ComplexService/FlexibleArrangement
      dockerfile: Dockerfile
    image: gcr.io/spm2024/flexiblearrangement:1.0  # Updated for GCR
    restart: always
    ports: ["6001:6001"]
    environment:
      PYTHONUNBUFFERED: 1

  #################################
  # FlexibleArrangement test: testing the FlexibleArrangement microservice
  #################################
  # FlexibleArrangement_test:
  #   build:
  #     context: ./ComplexService/FlexibleArrangement
  #     dockerfile: Dockerfile
  #   image: gcr.io/spm2024/flexiblearrangement_test:1.0
  #   depends_on:
  #     - FlexibleArrangement
  #   command: /bin/sh -c "sleep 80 && python -m unittest flexible_arrangement_test.py"

  #################################
  # ManageRequest: The ManageRequest microservice
  #################################
  ManageRequest:
    build:
      context: ./ComplexService/ManageRequest
      dockerfile: Dockerfile
    image: gcr.io/spm2024/managerequest:1.0  # Updated for GCR
    restart: always
    ports: ["6002:6002"]
    environment:
      PYTHONUNBUFFERED: 1 

  #################################
  # ManageRequest test: testing the ManageRequest microservice
  #################################
  # ManageRequest_test:
  #   build:
  #     context: ./ComplexService/ManageRequest
  #     dockerfile: Dockerfile
  #   image: gcr.io/spm2024/managerequest_test:1.0  # Updated for GCR
  #   depends_on:
  #     - ManageRequest
  #   command: /bin/sh -c "sleep 100 && python -m unittest manage_request_test.py"

  #################################
  # ScheduleAggregation: The ScheduleAggregation microservice
  #################################
  ScheduleAggregation:
    build:
      context: ./ComplexService/ScheduleAggregation
      dockerfile: Dockerfile
    image: gcr.io/spm2024/scheduleaggregation:1.0  # Updated for GCR
    restart: always
    ports: ["6003:6003"]
    environment:
      PYTHONUNBUFFERED: 1

  #################################
  # ScheduleAggregation test: testing the ScheduleAggregation microservice
  #################################
  # ScheduleAggregation_test:
  #   build:
  #     context: ./ComplexService/ScheduleAggregation
  #     dockerfile: Dockerfile
  #   image: gcr.io/spm2024/scheduleaggregation_test:1.0  # Updated for GCR
  #   depends_on:
  #     - ScheduleAggregation
  #   command: /bin/sh -c "sleep 100 && python -m unittest schedule_aggregation_test.py"